<testsuites name="jest tests">
  <testsuite name="raceCallApi Generator Function" tests="2" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:15" time="0.788">
    <testcase classname="raceCallApi Generator Function handles async responses" name="raceCallApi Generator Function handles async responses" time="0.005">
    </testcase>
    <testcase classname="raceCallApi Generator Function handles timed out responses (over 6000 ms)" name="raceCallApi Generator Function handles timed out responses (over 6000 ms)" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="addTodoSuccess" tests="5" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.114">
    <testcase classname="addTodoSuccess adds todo to state" name="addTodoSuccess adds todo to state" time="0.005">
    </testcase>
    <testcase classname="editTodoDescription edits the description of selected Todo" name="editTodoDescription edits the description of selected Todo" time="0.001">
    </testcase>
    <testcase classname="editTodoSuccess merges edited todo into state" name="editTodoSuccess merges edited todo into state" time="0.001">
    </testcase>
    <testcase classname="removeTodoSuccess removes todo from state" name="removeTodoSuccess removes todo from state" time="0.001">
    </testcase>
    <testcase classname="toggleTodoSuccess merges toggled todo into state" name="toggleTodoSuccess merges toggled todo into state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="utils/immutable" tests="9" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.098">
    <testcase classname="utils/immutable { toJS } does nothing if the object is not an Immutable" name="utils/immutable { toJS } does nothing if the object is not an Immutable" time="0.001">
    </testcase>
    <testcase classname="utils/immutable { toJS } invokes `toJS` on the object if it is Immutable" name="utils/immutable { toJS } invokes `toJS` on the object if it is Immutable" time="0.001">
    </testcase>
    <testcase classname="utils/immutable { clearIn } clears a $Set nested in an immutable and returns the immutable" name="utils/immutable { clearIn } clears a $Set nested in an immutable and returns the immutable" time="0.001">
    </testcase>
    <testcase classname="utils/immutable { subtractIn } subtracts an item from a $Set nested in an immutable and returns the immutable" name="utils/immutable { subtractIn } subtracts an item from a $Set nested in an immutable and returns the immutable" time="0.001">
    </testcase>
    <testcase classname="utils/immutable { subtractIn } subtracts many items from a $Set nested in an immutable and returns the immutable" name="utils/immutable { subtractIn } subtracts many items from a $Set nested in an immutable and returns the immutable" time="0">
    </testcase>
    <testcase classname="utils/immutable { pushIn } pushes an item to a $List nested in an immutable and returns the immutable" name="utils/immutable { pushIn } pushes an item to a $List nested in an immutable and returns the immutable" time="0.001">
    </testcase>
    <testcase classname="utils/immutable { deleteIn } deletes item at the given index inside a nested $List and returns the immutable" name="utils/immutable { deleteIn } deletes item at the given index inside a nested $List and returns the immutable" time="0">
    </testcase>
    <testcase classname="utils/immutable { rejectIn } removes items in nested $List for which predicate returns true" name="utils/immutable { rejectIn } removes items in nested $List for which predicate returns true" time="0.002">
    </testcase>
    <testcase classname="utils/immutable { filterIn } removes items in nested $List for which predicate returns false" name="utils/immutable { filterIn } removes items in nested $List for which predicate returns false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="libs/utils/api" tests="6" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.093">
    <testcase classname="libs/utils/api { buildUrl } combines a path and an object of key values into a url with a query" name="libs/utils/api { buildUrl } combines a path and an object of key values into a url with a query" time="0.002">
    </testcase>
    <testcase classname="libs/utils/api { buildUrl } removes keys that have null values" name="libs/utils/api { buildUrl } removes keys that have null values" time="0.001">
    </testcase>
    <testcase classname="libs/utils/api { parseRawParams } accepts todo params" name="libs/utils/api { parseRawParams } accepts todo params" time="0.001">
    </testcase>
    <testcase classname="libs/utils/api { parseRawParams } accepts remote URLs" name="libs/utils/api { parseRawParams } accepts remote URLs" time="0">
    </testcase>
    <testcase classname="libs/utils/api callApi handles 400 error with an exception" name="libs/utils/api callApi handles 400 error with an exception" time="0.002">
    </testcase>
    <testcase classname="libs/utils/api callApi handles 500 error with an exception" name="libs/utils/api callApi handles 500 error with an exception" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" tests="1" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.095">
    <testcase classname=" normalizeTodos" name=" normalizeTodos" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="libs/utils/normalizr" tests="3" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.091">
    <testcase classname="libs/utils/normalizr normalizeArray creates an object with numeric ids as the keys" name="libs/utils/normalizr normalizeArray creates an object with numeric ids as the keys" time="0.003">
    </testcase>
    <testcase classname="libs/utils/normalizr normalizeArrayToMap creates a map with numeric ids as the keys" name="libs/utils/normalizr normalizeArrayToMap creates a map with numeric ids as the keys" time="0.002">
    </testcase>
    <testcase classname="libs/utils/normalizr normalizeObjectToMap creates a map with numeric ids as the keys" name="libs/utils/normalizr normalizeObjectToMap creates a map with numeric ids as the keys" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="utils/redux" tests="1" errors="0" failures="0" skipped="0" timestamp="2017-05-14T09:53:16" time="0.077">
    <testcase classname="utils/redux buildActionType creates an action type string" name="utils/redux buildActionType creates an action type string" time="0.001">
    </testcase>
  </testsuite>
</testsuites>