#!/bin/sh

# script/bootstrap: Resolve all dependencies that the application requires to
#                   run.

set -e

cd "$(dirname "$0")/.."

# Check if Homebrew is installed
if [ hash brew 2>/dev/null ]; then
  echo >&2 "You do not have Homebrew installed. Please install it from http://brew.sh/. Aborting."
  exit 1
else
  echo >&2 "Homebrew is already installed."
fi

# Check if postgres is installed
if [ hash psql 2>/dev/null ]; then
  echo >&2 "You do not have Postgres installed. Please install it from http://postgresapp.com. Aborting."
  exit 1
else
  echo >&2 "Postgres is already installed."
fi

# Check if RVM or rbenv is installed
if [ hash rvm 2>/dev/null ] || [ hash rbenv 2>/dev/null ]; then
  echo >&2 "You do not have RVM or rbenv installed. Please install RVM from https://rvm.io/. Aborting."
  exit 1
else
  echo >&2 "RVM or rbenv is already installed."
fi

# Check if NVM is installed
if [ hash npm 2>/dev/null ]; then
  echo >&2 "You do not have npm installed. Please install NVM according to the instructions at http://stackoverflow.com/a/12570971/1009332. Aborting."
  exit 1
else
  echo >&2 "NVM/npm is already installed."
fi

# Check if application.yml is present
if [ -f "config/applcation.yml" ]; then
  echo >&2 "config/application.yml file is missing. Please get a copy from Dylan Grafmyre. Aborting."
  exit 1
else
  echo >&2 "config/application.yml found."
fi

# Install Homebrew dependencies
if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then
  echo "==> Updating Homebrew…"
  brew update
  brew tap homebrew/bundle

  brew bundle check 2>&1 >/dev/null || {
    echo "==> Installing Homebrew dependencies…"
    brew bundle
    echo "==> Homebrew dependencies installed."
  }
fi

# Install proper Ruby version via RVM
if [ -f ".ruby-version" ] && [ hash rvm 2>/dev/null ]; then
  echo "==> Installing Ruby…"
  $rubyVersion='cat .ruby-version'
  rvm install $rubyVersion
  echo "==> Ruby version $rubyVersion installed."
fi

# Install proper Ruby version via rbenv
if [ -f ".ruby-version" ] && [ hash rbenv 2>/dev/null ]; then
  echo "==> Installing Ruby…"
  rbenv install --skip-existing
  which bundle >/dev/null 2>&1  || {
    gem install bundler
    rbenv rehash
  }
fi

# Install bundler
if hash bundle 2>/dev/null; then
  echo >&2 "bundler is already installed."
else
  echo "==> Installing bundler…"
  gem install bundler
  echo "==> bundler installed."
fi

# Install mailcatcher
if [ hash mailcatcher 2>/dev/null ]; then  echo "==> Installing mailcatcher…"
  if [ hash rvm 2>/dev/null ]; then
    rvm @global do gem install mailcatcher
  else
    gem install mailcatcher
    rbenv rehash
  fi
  echo "==> mailcatcher installed."
else
  echo >&2 "mailcatcher is already installed."
fi

# Install foreman with RVM
if [ hash foreman 2>/dev/null ]; then
  echo "==> Installing foreman…"
  if [ hash rvm 2>/dev/null ]; then
    rvm @global do gem install foreman
  else
    gem install foreman
    rbenv rehash
  fi
  echo "==> foreman installed."
else
  echo >&2 "foreman is already installed."
fi

# Bundle install
echo "==> Installing gem dependencies…"
bundle install --without production
echo "==> Gem dependencies installed."

# NPM Install
echo "==> Installing node module dependencies…"
yarn
echo "==> Node module dependencies installed."
